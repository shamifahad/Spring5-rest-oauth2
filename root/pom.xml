<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.zohaib.research.rest.oauth2</groupId>
	<artifactId>root</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>root</name>

	<prerequisites>
		<maven>3.3.3</maven>
	</prerequisites>

	<properties>
		<failOnMissingWebXml>false</failOnMissingWebXml>
		<category>Reactive</category>
		<spring.boot-version>2.0.2.RELEASE</spring.boot-version>
		<camel.spring.boot-version>2.21.1</camel.spring.boot-version>
		<!-- enforce to require using at least this maven version -->
		<maven-enforcer-require-maven-version>3.2.5</maven-enforcer-require-maven-version>

		<!-- unify the encoding for all the modules -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<site-repo-url>scpexe://people.apache.org/www/camel.apache.org/maven/</site-repo-url>
		<maven.compiler.source>1.9</maven.compiler.source>
		<maven.compiler.target>1.9</maven.compiler.target>
		<maven.compiler.release>9</maven.compiler.release>
		<compiler.fork>false</compiler.fork>
		<hibernate.version>5.3.2.Final</hibernate.version>

		<junit.jupiter.version>5.0.0-M4</junit.jupiter.version>
		<junit.platform.version>1.0.0-M4</junit.platform.version>
		<junit.platform.surefire.provider.version>1.0.0-M4</junit.platform.surefire.provider.version>

		<maven-compiler-plugin-version>3.7.0</maven-compiler-plugin-version>
		<maven-surefire-plugin-version>2.20.1</maven-surefire-plugin-version>
		<h2.version>1.4.196</h2.version>
		<postgresql.version>42.1.4</postgresql.version>

		<!-- eclipse plugin need the jaxb in this pom.xml file -->
		<!-- Make sure to keep JAXB version up to date in parent/pom.xml in the 
			bottom of the file -->
		<jaxb-version>2.3.0</jaxb-version>
		<errorprone-version>2.5</errorprone-version>
		<mycila-license-version>3.0</mycila-license-version>
		<gmavenplus-plugin-version>1.5</gmavenplus-plugin-version>
		<groovy-version>2.4.13</groovy-version>
		<spring.boot.starter.version>2.0.2.RELEASE</spring.boot.starter.version>
		<lombok.version>1.16.20</lombok.version>
		<h2.version>1.4.196</h2.version>
		<postgresql.version>42.1.4</postgresql.version>
	</properties>

	<distributionManagement>
		<site>
			<id>apache.website</id>
			<url>${site-repo-url}</url>
		</site>
	</distributionManagement>

	<!-- Comment out the snapshot repositories as we don't need them now -->
	<repositories>
		<repository>
			<id>apache.snapshots</id>
			<url>http://repository.apache.org/snapshots/</url>
			<name>Apache Snapshot Repo</name>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</repository>
		<repository>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>central</id>
			<name>libs-release</name>
			<url>https://repo.spring.io/libs-release</url>
		</repository>
		<repository>
			<snapshots />
			<id>snapshots</id>
			<name>libs-snapshot</name>
			<url>https://repo.spring.io/libs-snapshot</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>apache.snapshots</id>
			<url>http://repository.apache.org/snapshots/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</pluginRepository>
		<pluginRepository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>



	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>1.3.156</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring.boot-version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>Camden.SR5</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-autoconfigure</artifactId>
				<version>${spring.boot-version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.datatype</groupId>
				<artifactId>jackson-datatype-hibernate5</artifactId>
				<version>2.9.6</version>
			</dependency>
			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>${h2.version}</version>
			</dependency>
			<dependency>
				<groupId>org.postgresql</groupId>
				<artifactId>postgresql</artifactId>
				<version>${postgresql.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.session</groupId>
				<artifactId>spring-session</artifactId>
				<version>1.3.3.RELEASE</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security.oauth</groupId>
				<artifactId>spring-security-oauth2</artifactId>
				<version>2.3.3.RELEASE</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-jwt</artifactId>
				<version>1.0.9.RELEASE</version>
			</dependency>
			<dependency>
				<groupId>javax.xml.bind</groupId>
				<artifactId>jaxb-api</artifactId>
				<version>2.3.0</version>
			</dependency>
			<dependency>
				<groupId>com.sun.xml.bind</groupId>
				<artifactId>jaxb-impl</artifactId>
				<version>2.3.0</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jaxb</groupId>
				<artifactId>jaxb-runtime</artifactId>
				<version>2.3.0</version>
			</dependency>
			<dependency>
				<groupId>javax.activation</groupId>
				<artifactId>activation</artifactId>
				<version>1.1.1</version>
			</dependency>
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
			</dependency>


		</dependencies>
	</dependencyManagement>

	<build>
		<defaultGoal>install</defaultGoal>

		<!-- enforce maven version -->


		<pluginManagement>
			<plugins>

				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin-version}</version>
					<configuration>
						<source>${maven.compiler.source}</source>
						<target>${maven.compiler.target}</target>
						<!-- <compilerArgument>-Xlint:all</compilerArgument> -->
						<showWarnings>true</showWarnings>
						<showDeprecation>true</showDeprecation>
						<compilerArguments>
							<processor>
								org.hibernate.jpamodelgen.JPAMetaModelEntityProcessor,lombok.launch.AnnotationProcessorHider$AnnotationProcessor
							</processor>
						</compilerArguments>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>2.10</version>
					<dependencies>
						<dependency>
							<groupId>org.apache.camel</groupId>
							<artifactId>camel-buildtools</artifactId>
							<version>${project.version}</version>
						</dependency>
					</dependencies>
					<configuration>
						<downloadSources>true</downloadSources>
						<downloadJavadocs>false</downloadJavadocs>

					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<!-- see http://jira.codehaus.org/browse/MRELEASE-812 -->
					<version>2.4.2</version>
					<dependencies>
						<dependency>
							<groupId>org.apache.maven.scm</groupId>
							<artifactId>maven-scm-provider-gitexe</artifactId>
							<version>1.9</version>
						</dependency>
					</dependencies>
					<configuration>
						<localCheckout>true</localCheckout>
						<pushChanges>true</pushChanges>
						<tagNameFormat>@{project.artifactId}-@{project.version}</tagNameFormat>
						<useReleaseProfile>false</useReleaseProfile>
						<preparationGoals>clean install</preparationGoals>
						<goals>deploy</goals>
						<!-- The profile we want to use when doing the release -->
						<arguments>-Prelease,apache-release,enable-schemagen,apt,sourcecheck,hibernate</arguments>
						<autoVersionSubmodules>true</autoVersionSubmodules>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>


</project>